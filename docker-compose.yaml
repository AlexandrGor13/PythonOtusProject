services:
  pg:
    image: postgres:17
    environment:
      POSTGRES_DB: ${DB__NAME}
      POSTGRES_USER: ${DB__USER}
      POSTGRES_PASSWORD: ${DB__PASSWORD}
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "5432:5432"
    volumes:
      - postgresdata:/var/lib/postgresql/data/pgdata
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M
    command: >
      postgres -c max_connections=1000
               -c shared_buffers=256MB
               -c effective_cache_size=768MB
               -c maintenance_work_mem=64MB
               -c checkpoint_completion_target=0.7
               -c wal_buffers=16MB
               -c default_statistics_target=100
    healthcheck:
      test: [ "CMD", "pg_isready -U $${DB__USER} -d $${DB__NAME}" ]
      interval: 1s
      timeout: 5s
      retries: 3
    restart: unless-stopped
    tty: true
    stdin_open: true

  app:
    build:
      dockerfile: app/Dockerfile
      context: .
    environment:
      DB__NAME: ${DB__NAME}
      DB__HOST: pg
      DB__USER: ${DB__USER}
      DB__PASSWORD: ${DB__PASSWORD}
    command:
      - gunicorn
      - main:app
      - --workers
      - "2"
      - --worker-class
      - uvicorn.workers.UvicornWorker
      - --bind
      - 0.0.0.0:8000
    ports:
      - "8000:8000"
    depends_on:
#      - pg
      pg:
        condition: service_healthy

volumes:
  postgresdata:
